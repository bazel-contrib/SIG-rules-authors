ref: "v1.0.0"
sha: "2e6c468d51361891a664da5d74af2116420a671a"
readme: "# Bazel rules for TypeScript\n\nThis is the canonical ruleset for using Bazel for TypeScript, based on\n<https://github.com/aspect-build/rules_js>, and recommended for all new projects.\n\nThis is a high-performance alternative to the `@bazel/typescript` npm package from rules_nodejs.\nThe `ts_project` rule here is identical to the one in rules_nodejs, making it easy to migrate.\nSince rules_js always runs tools from the bazel-out tree, rules_ts naturally fixes most usability bugs with rules_nodejs:\n\n-   Freely mix generated `*.ts` and `tsconfig.json` files in the bazel-out tree with source files\n-   Fixes the need for any `rootDirs` settings in `tsconfig.json` as reported in https://github.com/microsoft/TypeScript/issues/37378\n-   \"worker mode\" for `ts_project` now shares workers across all targets, rather than requiring one worker pool per target\n\nrules_ts is just a part of what Aspect provides:\n\n-   _Need help?_ This ruleset has support provided by https://aspect.dev.\n-   See our other Bazel rules, especially those built for rules_js, linked from <https://github.com/aspect-build>\n\nKnown issues:\n\n-   Does not work with `--worker_sandboxing`. See https://github.com/aspect-build/rules_ts/issues/127#issuecomment-1312041592\n-   Workers are disabled and not currently supported on Windows hosts. See https://github.com/aspect-build/rules_ts/issues/228.\n\n## Installation\n\nFrom the release you wish to use:\n<https://github.com/aspect-build/rules_ts/releases>\ncopy the WORKSPACE snippet into your `WORKSPACE` file.\n\n## Examples\n\nThere are a number of examples in [the examples/ folder](./examples/).\n\nIf you'd like an example added, you can file a [Feature Request](https://github.com/aspect-build/rules_ts/issues/new/choose).\n\n## Usage\n\nSee the API documentation in [the docs/ folder](./docs/).\n\n### From a BUILD file\n\nThe most common use is with the [`ts_project` macro](./docs/rules.md#ts_project) which invokes the\n[`tsc` CLI](https://www.typescriptlang.org/docs/handbook/compiler-options.html) to transform\nsource files like `.ts` files into outputs such as `.js` and `.d.ts` files.\n\nWe encourage you to read about the `transpiler` property which lets you use a faster tool like\nBabel or SWC to produce the `.js` files, so you don't have to wait for type-checking in your fast\ndevelopment loop.\n\n### In a macro\n\nMany organizations set default values, so it's common to write a [macro] to wrap `ts_project`, then\nensure that your developers load your macro rather than loading from `@aspect_rules_ts` directly.\n\n[macro]: https://bazel.build/extending/macros\n\n### BUILD file generation\n\nAspect provides an alpha preview of our TypeScript BUILD file generator as part of the\n[Aspect CLI](https://aspect.build/cli). Run `aspect configure` to create or update BUILD.bazel files\nas you edit TypeScript sources.\n\n### Advanced: custom rules\n\nIf you know how to write Bazel rules, you might find that `ts_project` doesn't do what you want.\n\nOne way to customize it is to peel off one layer of indirection, by calling the `ts_project_rule`\ndirectly. This bypasses our default setting logic, and also the validation program which checks that\nts_project attributes are well-formed.\n\nYou can also write a custom rule from scratch. We expose helper functions from /ts/private in this\nrepo. Be aware that these are not a public API, so you may have to account for breaking changes\nwhich aren't subject to our usual semver policy.\n"
release: {
  title: "v1.0.0"
  description: "## Using [Bzlmod] with Bazel 6:\r\n\r\nAdd to your `MODULE.bazel` file:\r\n\r\n```starlark\r\nbazel_dep(name = \"aspect_rules_ts\", version = \"1.0.0\")\r\n\r\nrules_ts_ext = use_extension(\r\n    \"@aspect_rules_ts//ts:extensions.bzl\",\r\n    \"ext\",\r\n    dev_dependency = True,\r\n)\r\n\r\nrules_ts_ext.deps()\r\n\r\nuse_repo(rules_ts_ext, \"npm_typescript\")\r\n\r\nuse_repo(rules_ts_ext, \"npm_google_protobuf\")\r\n\r\nuse_repo(rules_ts_ext, \"npm_at_bazel_worker\")\r\n```\r\n\r\n[Bzlmod]: https://bazel.build/build/bzlmod\r\n\r\n## Using WORKSPACE\r\n\r\nPaste this snippet into your `WORKSPACE` file:\r\n\r\n```starlark\r\nload(\"@bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\")\r\nhttp_archive(\r\n    name = \"aspect_rules_ts\",\r\n    sha256 = \"f3f0d0a92b0069f8d1bf6a0e26408bd591a8626166db3f88e8d971ffed8f59ba\",\r\n    strip_prefix = \"rules_ts-1.0.0\",\r\n    url = \"https://github.com/aspect-build/rules_ts/archive/refs/tags/v1.0.0.tar.gz\",\r\n)\r\n\r\n##################\r\n# rules_ts setup #\r\n##################\r\n# Fetches the rules_ts dependencies.\r\n# If you want to have a different version of some dependency,\r\n# you should fetch it *before* calling this.\r\n# Alternatively, you can skip calling this function, so long as you've\r\n# already fetched all the dependencies.\r\nload(\"@aspect_rules_ts//ts:repositories.bzl\", \"LATEST_VERSION\", \"rules_ts_dependencies\")\r\n\r\nrules_ts_dependencies(ts_version = LATEST_VERSION)\r\n\r\n# Fetch and register node, if you haven't already\r\nload(\"@rules_nodejs//nodejs:repositories.bzl\", \"DEFAULT_NODE_VERSION\", \"nodejs_register_toolchains\")\r\n\r\nnodejs_register_toolchains(\r\n    name = \"node\",\r\n    node_version = DEFAULT_NODE_VERSION,\r\n)\r\n```\r\n\r\n\r\n## What's Changed\r\n* chore(deps): update dependency io_bazel_stardoc to v0.5.2 by @renovate in https://github.com/aspect-build/rules_ts/pull/116\r\n* chore(deps): update dependency bazel_gazelle to v0.26.0 by @renovate in https://github.com/aspect-build/rules_ts/pull/118\r\n* chore(deps): update dependency rules_nodejs to v5.5.3 by @renovate in https://github.com/aspect-build/rules_ts/pull/117\r\n* chore(deps): update dependency io_bazel_rules_go to v0.34.0 by @renovate in https://github.com/aspect-build/rules_ts/pull/120\r\n* chore(deps): update dependency bazel_skylib to v1.2.1 by @renovate in https://github.com/aspect-build/rules_ts/pull/119\r\n* refactor: make fstree handle watchers by @thesayyn in https://github.com/aspect-build/rules_ts/pull/108\r\n* fix: add .d.mts/.d.cts in declaration info by @jstuder-gh in https://github.com/aspect-build/rules_ts/pull/122\r\n* chore: update to rules_js 1.0.0 by @gregmagolan in https://github.com/aspect-build/rules_ts/pull/123\r\n* fix: follow symlinks in getDirectories by @thesayyn in https://github.com/aspect-build/rules_ts/pull/125\r\n* fix: ensure extends paths are relative by @alexeagle in https://github.com/aspect-build/rules_ts/pull/126\r\n* chore: update to bazel 5.2.0 by @gregmagolan in https://github.com/aspect-build/rules_ts/pull/135\r\n* chore: update to rules_js 1.1.0 by @gregmagolan in https://github.com/aspect-build/rules_ts/pull/133\r\n* chore: upgrade to typescript 4.8.2 by @gregmagolan in https://github.com/aspect-build/rules_ts/pull/136\r\n* chore: add CI on RBE by @gregmagolan in https://github.com/aspect-build/rules_ts/pull/137\r\n* ci: run PR workflow on main repo and not forks by @jbedard in https://github.com/aspect-build/rules_ts/pull/142\r\n* chore: update to rules_js 1.1.2 by @gregmagolan in https://github.com/aspect-build/rules_ts/pull/144\r\n* chore(deps): update dependency bazel_skylib to v1.3.0 by @renovate in https://github.com/aspect-build/rules_ts/pull/143\r\n* ci: run on pull_request instead of pull_request_target by @jbedard in https://github.com/aspect-build/rules_ts/pull/145\r\n* fix: check for dangling symlinks by @thesayyn in https://github.com/aspect-build/rules_ts/pull/146\r\n* fix: add file info to error for `tsc` overreach by @vpanta in https://github.com/aspect-build/rules_ts/pull/129\r\n* fix: `ts_project` fails if `root_dir` used deep in source tree by @vpanta in https://github.com/aspect-build/rules_ts/pull/130\r\n* chore(deps): update dependency io_bazel_rules_go to v0.35.0 by @renovate in https://github.com/aspect-build/rules_ts/pull/148\r\n* chore(deps): update dependency rules_nodejs to v5.5.4 by @renovate in https://github.com/aspect-build/rules_ts/pull/147\r\n* chore: update to aspect_bazel_lib 1.11.8 by @gregmagolan in https://github.com/aspect-build/rules_ts/pull/149\r\n* chore(deps): remove bazel-integration-testing  by @jbedard in https://github.com/aspect-build/rules_ts/pull/153\r\n* chore(deps): update dependency aspect_bazel_lib to v1.12.0 by @renovate in https://github.com/aspect-build/rules_ts/pull/155\r\n* chore(deps): update dependency aspect_rules_js to v1.3.1 by @renovate in https://github.com/aspect-build/rules_ts/pull/156\r\n* docs: mention --worker_sandboxing incompatibility by @tsawada in https://github.com/aspect-build/rules_ts/pull/154\r\n* chore: update to  aspect_bazel_lib 1.12.1 by @gregmagolan in https://github.com/aspect-build/rules_ts/pull/164\r\n* chore(deps): update dependency aspect_rules_js to v1.4.0 by @renovate in https://github.com/aspect-build/rules_ts/pull/165\r\n* chore: add example --config=debug settings to .bazelrc.common and example debuggle target with sourcemaps back to .ts sources by @gregmagolan in https://github.com/aspect-build/rules_ts/pull/168\r\n* chore(deps): update dependency rules_nodejs to v5.6.0 by @renovate in https://github.com/aspect-build/rules_ts/pull/157\r\n* fix: report failedLookups twice by @thesayyn in https://github.com/aspect-build/rules_ts/pull/169\r\n* test: add path_mapping example by @jbedard in https://github.com/aspect-build/rules_ts/pull/172\r\n* fix: validate preserveSymlinks tsconfig option is not set by @jbedard in https://github.com/aspect-build/rules_ts/pull/171\r\n* fix: allow composite projects by @alexeagle in https://github.com/aspect-build/rules_ts/pull/176\r\n* refactor: TsConfigInfo uses depsets by @alexeagle in https://github.com/aspect-build/rules_ts/pull/178\r\n* fix: validate tsconfig dictionary values by @jbedard in https://github.com/aspect-build/rules_ts/pull/173\r\n* Chore/export ts config by @sallustfire in https://github.com/aspect-build/rules_ts/pull/174\r\n* fix: prevent worker from running oom by @thesayyn in https://github.com/aspect-build/rules_ts/pull/182\r\n* fix: prefix host call by @thesayyn in https://github.com/aspect-build/rules_ts/pull/184\r\n* fix: remove unused validate_options(has_local_deps) by @jbedard in https://github.com/aspect-build/rules_ts/pull/200\r\n* fix: .tsbuildinfo is not written in subsequent builds by @thesayyn in https://github.com/aspect-build/rules_ts/pull/187\r\n* chore: account for github actions deprecation by @alexeagle in https://github.com/aspect-build/rules_ts/pull/201\r\n* fix(ts_lib): omit \".\" segments in path joining by @alexeagle in https://github.com/aspect-build/rules_ts/pull/205\r\n* fix(docs): introduce tsc_test example by @alexeagle in https://github.com/aspect-build/rules_ts/pull/207\r\n* chore: rename declaration_only example by @alexeagle in https://github.com/aspect-build/rules_ts/pull/208\r\n* feat: add ts_project(deps) validation ensuring all deps of declarations by @jbedard in https://github.com/aspect-build/rules_ts/pull/199\r\n* docs: rename json example to match TS compiler option by @alexeagle in https://github.com/aspect-build/rules_ts/pull/210\r\n* docs: cleanup declaration_dir example by @alexeagle in https://github.com/aspect-build/rules_ts/pull/209\r\n* test: add case for filegroup of srcs by @alexeagle in https://github.com/aspect-build/rules_ts/pull/211\r\n* docs: show example of different module outputs by @alexeagle in https://github.com/aspect-build/rules_ts/pull/212\r\n* docs: add custom compiler example by @alexeagle in https://github.com/aspect-build/rules_ts/pull/213\r\n* docs: add root_dir example by @alexeagle in https://github.com/aspect-build/rules_ts/pull/214\r\n* docs: improve readability: extract transpiler/tsconfig to standalone by @alexeagle in https://github.com/aspect-build/rules_ts/pull/215\r\n* chore: fixes to doc presentation by @alexeagle in https://github.com/aspect-build/rules_ts/pull/216\r\n* chore: update to Bazel 6.0.0rc1 by @gregmagolan in https://github.com/aspect-build/rules_ts/pull/217\r\n* fix: fix bzlmod with Bazel 6.0.0rc1 and enable e2e/bzlmod on CI by @alexeagle in https://github.com/aspect-build/rules_ts/pull/197\r\n* chore: cleanup maybe pattern by @gregmagolan in https://github.com/aspect-build/rules_ts/pull/218\r\n* fix: support --experimental_allow_unresolved_symlinks flag by @thesayyn in https://github.com/aspect-build/rules_ts/pull/202\r\n* chore: update workspace deps to latest by @gregmagolan in https://github.com/aspect-build/rules_ts/pull/221\r\n* chore: rename VERSIONS to TOOL_VERSIONS (for consistency with other rule sets) add comment about order by @gregmagolan in https://github.com/aspect-build/rules_ts/pull/222\r\n* chore: updates for bzlmod launch by @alexeagle in https://github.com/aspect-build/rules_ts/pull/229\r\n* fix: document tsc with more heap by @alexeagle in https://github.com/aspect-build/rules_ts/pull/230\r\n* docs: add troubleshooting guide by @alexeagle in https://github.com/aspect-build/rules_ts/pull/232\r\n* fix: update deps and fix worker tests by @thesayyn in https://github.com/aspect-build/rules_ts/pull/226\r\n* chore: update to rules_jasmine 0.2.1 by @gregmagolan in https://github.com/aspect-build/rules_ts/pull/234\r\n* chore: update to rules_js 1.6.8 by @gregmagolan in https://github.com/aspect-build/rules_ts/pull/235\r\n* fix: remove /node_modules/. from ignored paths by @thesayyn in https://github.com/aspect-build/rules_ts/pull/185\r\n* fix: take project rescaling into consideration by @thesayyn in https://github.com/aspect-build/rules_ts/pull/237\r\n* docs: clarify why --worker_sandboxing does not work by @thesayyn in https://github.com/aspect-build/rules_ts/pull/241\r\n* test: assert external tsconfig is usable with workers by @thesayyn in https://github.com/aspect-build/rules_ts/pull/239\r\n* fix: support non-file transpiler srcs by @jbedard in https://github.com/aspect-build/rules_ts/pull/236\r\n* chore: cleanup macro that was upstreamed by @alexeagle in https://github.com/aspect-build/rules_ts/pull/243\r\n* fix: disable workers on Windows due to #228 by @gregmagolan in https://github.com/aspect-build/rules_ts/pull/245\r\n\r\n## New Contributors\r\n* @jstuder-gh made their first contribution in https://github.com/aspect-build/rules_ts/pull/122\r\n* @vpanta made their first contribution in https://github.com/aspect-build/rules_ts/pull/129\r\n* @tsawada made their first contribution in https://github.com/aspect-build/rules_ts/pull/154\r\n* @sallustfire made their first contribution in https://github.com/aspect-build/rules_ts/pull/174\r\n\r\n**Full Changelog**: https://github.com/aspect-build/rules_ts/compare/v0.12.0...v1.0.0"
  publish_time: {
    seconds: 1668643968
  }
}
module_file: {
  name: "aspect_rules_ts"
  version: "0.0.0"
  compatibility_level: 1
  dependencies: {
    name: "bazel_skylib"
    version: "1.3.0"
  }
  dependencies: {
    name: "rules_nodejs"
    version: "5.5.3"
    dev_dependency: true
  }
  dependencies: {
    name: "aspect_rules_js"
    version: "1.6.3"
  }
  dependencies: {
    name: "aspect_bazel_lib"
    version: "1.15.0"
  }
}
